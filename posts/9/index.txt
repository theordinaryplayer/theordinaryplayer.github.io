1:"$Sreact.fragment"
2:I[1917,["874","static/chunks/874-0715c6660f33056f.js","177","static/chunks/app/layout-6821989e314e6304.js"],"default"]
3:I[7555,[],""]
4:I[1295,[],""]
5:I[6874,["874","static/chunks/874-0715c6660f33056f.js","880","static/chunks/app/posts/%5Bid%5D/page-ba617bb0ce8d0e66.js"],""]
6:I[9742,["874","static/chunks/874-0715c6660f33056f.js","177","static/chunks/app/layout-6821989e314e6304.js"],"Analytics"]
8:I[9665,[],"OutletBoundary"]
b:I[9665,[],"ViewportBoundary"]
d:I[9665,[],"MetadataBoundary"]
f:I[6614,[],""]
:HL["/_next/static/css/57ead594feaf2ad3.css","style"]
0:{"P":null,"b":"S_xh7GWUEdW5zAh9PZyMt","p":"","c":["","posts","9",""],"i":false,"f":[[["",{"children":["posts",{"children":[["id","9","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/57ead594feaf2ad3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"antialiased bg-background text-foreground font-sans","children":[["$","$L2",null,{}],["$","main",null,{"className":"min-h-screen","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"flex flex-col items-center justify-center min-h-[80vh] px-4 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold mb-4 gradient-text","children":"404"}],["$","p",null,{"className":"text-xl text-muted-foreground mb-8","children":"Page not found"}],["$","p",null,{"className":"text-muted-foreground mb-8","children":"The page you are looking for might have been removed, had its name changed, or is temporarily unavailable."}],["$","$L5",null,{"href":"/","className":"px-6 py-3 bg-primary text-black rounded-full hover:bg-primary/90 transition-colors font-semibold","children":"Go back home"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","footer",null,{"className":"bg-black border-t border-primary/20 mt-20","children":["$","div",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12","children":[["$","div",null,{"className":"grid grid-cols-1 md:grid-cols-4 gap-8 mb-8","children":[["$","div",null,{"children":[["$","h3",null,{"className":"text-xl font-bold gradient-text mb-4","children":"The Ordinary Player"}],["$","p",null,{"className":"text-muted-foreground","children":"Rookie hackers on a mission to learn, fail, and hack smarter."}]]}],["$","div",null,{"children":[["$","h4",null,{"className":"font-semibold text-foreground mb-4","children":"Navigation"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L5",null,{"href":"/","className":"text-muted-foreground hover:text-primary transition-colors","children":"Home"}]}],["$","li",null,{"children":["$","$L5",null,{"href":"/members","className":"text-muted-foreground hover:text-primary transition-colors","children":"Members"}]}]]}]]}],["$","div",null,{"children":[["$","h4",null,{"className":"font-semibold text-foreground mb-4","children":"Resources"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L5",null,{"href":"/posts","className":"text-muted-foreground hover:text-primary transition-colors","children":"Posts"}]}],["$","li",null,{"children":["$","$L5",null,{"href":"/writeups","className":"text-muted-foreground hover:text-primary transition-colors","children":"Writeups"}]}]]}]]}],["$","div",null,{"children":[["$","h4",null,{"className":"font-semibold text-foreground mb-4","children":"Connect"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-muted-foreground hover:text-primary transition-colors","children":"Twitter"}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-muted-foreground hover:text-primary transition-colors","children":"Discord"}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-muted-foreground hover:text-primary transition-colors","children":"GitHub"}]}]]}]]}]]}],["$","div",null,{"className":"border-t border-primary/20 pt-8 text-center text-muted-foreground","children":["$","p",null,{"children":"© 2025 The Ordinary Player CTF Team. All rights reserved."}]}]]}]}],["$","$L6",null,{}]]}]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","9","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7","$undefined",null,["$","$L8",null,{"children":["$L9","$La",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","aH6HVUgyQWIlJshgRD6Gj",{"children":[["$","$Lb",null,{"children":"$Lc"}],null]}],["$","$Ld",null,{"children":"$Le"}]]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
c:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
10:T54c2,<p class="markdown-p my-4 leading-relaxed">Remote File Inclusion (RFI) is a severe web vulnerability where an application includes code or content from a <em class="markdown-em italic">remote</em> resource (URL) based on user input. When exploitation is possible, an attacker can cause the server to fetch and execute attacker-controlled code — often resulting in full remote code execution. RFI is less common today than classic LFI because many environments disable remote includes, but it still appears in legacy apps and misconfigured PHP stacks.</p>
<p class="markdown-p my-4 leading-relaxed"><img src="https://cdn.prod.website-files.com/5ff66329429d880392f6cba2/677d4b0e13efe97db0f7f0f5_615dbdfcbb0362643fa48c91_Remote%2520file%2520inclusion%2520work.png" alt="1" class=""></p>
<p class="markdown-p my-4 leading-relaxed">This guide explains how to <em class="markdown-em italic">safely</em> hunt for RFI in authorized tests, how to detect and document it without creating exploit code, and how developers and ops teams can eliminate the risk.</p>
<blockquote class="markdown-blockquote my-4 border-l-4 border-primary pl-4 italic text-muted-foreground">
<p class="markdown-p my-4 leading-relaxed"><strong class="markdown-strong font-bold">Important:</strong> All testing examples and commands below are for <strong class="markdown-strong font-bold">authorized, in-scope</strong> security testing only (bug bounty, pentest with permission, or local lab). Do not attempt on systems you don’t have explicit permission to test.</p>
</blockquote>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">1 — What causes RFI (quick root causes)</h2>
<p class="markdown-p my-4 leading-relaxed">Typical root causes:</p>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2">Using user input directly in an <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">include</code>, <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">require</code>, <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">file_get_contents</code>, or similar function.</li>
<li class="markdown-li my-2"><code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">allow_url_include = On</code> (PHP) or <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">allow_url_fopen = On</code> combined with inclusion logic.</li>
<li class="markdown-li my-2">No allowlist / insufficient input validation.</li>
<li class="markdown-li my-2">Legacy frameworks or plugins that trust external templates.</li>
</ul>
<p class="markdown-p my-4 leading-relaxed">Example (unsafe pattern, conceptual):</p>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-php markdown-code font-mono text-sm"><span class="hljs-comment">// unsafe: user-controlled value used directly in include</span>
<span class="hljs-keyword">include</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">'page'</span>];
</code></pre>
<p class="markdown-p my-4 leading-relaxed">If <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">page</code> can be a URL and remote includes are allowed, the server may fetch and execute remote code.</p>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">2 — Recon &amp; parameter discovery (non-destructive)</h2>
<p class="markdown-p my-4 leading-relaxed">Goal: find likely inclusion points and parameters without executing remote code.</p>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Collect URLs</strong> (archives &amp; crawling)</li>
</ul>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-bash markdown-code font-mono text-sm">gau example.com &gt; urls.txt
</code></pre>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Find candidate parameters</strong> (search for <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">page</code>, <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">include</code>, <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">template</code>, <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">url</code>, <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">view</code>, <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">file</code>)</li>
</ul>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-bash markdown-code font-mono text-sm">grep -Eo <span class="hljs-string">"([?&amp;](page|file|template|include|url|view)=[^&amp; ]+)"</span> urls.txt | <span class="hljs-built_in">sort</span> -u
</code></pre>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Inspect responses &amp; errors</strong> using safe, benign inputs (do not trigger remote code fetches):</li>
</ul>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-bash markdown-code font-mono text-sm">curl -s -D - <span class="hljs-string">'https://target.example/view.php?page=home'</span> | sed -n <span class="hljs-string">'1,60p'</span>
</code></pre>
<p class="markdown-p my-4 leading-relaxed">Look for error messages or stack traces hinting at <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">include()</code> usage or absolute file paths.</p>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Static fingerprinting</strong>: server headers, application frameworks, and exposed phpinfo (if accidentally public) provide clues about PHP configuration. A phpinfo page may reveal <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">allow_url_include</code>, but <strong class="markdown-strong font-bold">never</strong> request or leak phpinfo from a third-party unless authorized.</li>
</ul>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">3 — Safe confirmation techniques (non-exploitative)</h2>
<p class="markdown-p my-4 leading-relaxed">Confirm behavior by observing how the application <em class="markdown-em italic">responds</em> to changes, not by including remote content.</p>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Behavioral diffing</strong>: submit harmless variations and compare responses.</li>
</ul>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-bash markdown-code font-mono text-sm">curl -s <span class="hljs-string">'https://target.example/view.php?page=home'</span> -o base.html
curl -s <span class="hljs-string">'https://target.example/view.php?page=home%2F'</span> -o test.html
diff -u base.html test.html | <span class="hljs-built_in">head</span>
</code></pre>
<p class="markdown-p my-4 leading-relaxed">Significant differences or new error output may indicate the parameter is used in an include path.</p>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2">
<p class="markdown-p my-4 leading-relaxed"><strong class="markdown-strong font-bold">Error observation</strong>: trigger a local-file-not-found path (non-sensitive) and capture server error messages (stack traces), which help triage whether the code uses include/require or file wrappers.</p>
</li>
<li class="markdown-li my-2">
<p class="markdown-p my-4 leading-relaxed"><strong class="markdown-strong font-bold">Passive evidence</strong>: extract any helpful clues from pages, comments, or exposed backups that indicate remote include logic. Aggregate these as non-destructive evidence for reporting.</p>
</li>
</ul>
<blockquote class="markdown-blockquote my-4 border-l-4 border-primary pl-4 italic text-muted-foreground">
<p class="markdown-p my-4 leading-relaxed">Do <strong class="markdown-strong font-bold">not</strong> attempt to include remote resources or upload code on real targets you do not control. That would be destructive and illegal.</p>
</blockquote>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">4 — Authorized tooling (use carefully)</h2>
<p class="markdown-p my-4 leading-relaxed">Only use active scanners when allowed and tuned to be non-destructive.</p>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Burp Suite</strong> (manual inspection, intruder for safe fuzzing) — good for controlled, manual exploration.</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Nikto</strong> and <strong class="markdown-strong font-bold">wpscan</strong> — useful for fingerprinting but can be noisy; run only when permitted.</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">ffuf/gobuster</strong> — to discover hidden endpoints and potential include points.</li>
</ul>
<p class="markdown-p my-4 leading-relaxed">Example safe ffuf usage (discovery only):</p>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-bash markdown-code font-mono text-sm">ffuf -u https://target.example/FUZZ -w /usr/share/wordlists/common.txt -sf
</code></pre>
<p class="markdown-p my-4 leading-relaxed">When using any automation, set low concurrency and avoid payloads that cause remote fetches.</p>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">5 — Why RFI is dangerous — escalation scenarios</h2>
<p class="markdown-p my-4 leading-relaxed">RFI becomes critical when one or more of the following conditions exist:</p>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Remote include is executed by the interpreter</strong> → attacker can run arbitrary code.</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">File wrappers available</strong> (e.g., <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">php://input</code>, <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">data://</code>) and <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">allow_url_include</code> enabled → more attack vectors.</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Writable upload directories</strong> or log file injection allow combination with LFI to reach RCE.</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Web server or PHP runs with high privileges</strong> → greater impact.</li>
</ul>
<p class="markdown-p my-4 leading-relaxed">Document whether any of the above conditions appear likely via safe observation; that increases severity and urgency in reporting.</p>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">6 — Mitigations — configuration &amp; code (concrete)</h2>
<h3 class="markdown-h3 text-xl font-bold mt-6 mb-4">PHP configuration (defensive)</h3>
<p class="markdown-p my-4 leading-relaxed">Ensure these are set in <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">php.ini</code> or the site’s PHP-FPM pool config:</p>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-ini markdown-code font-mono text-sm"><span class="hljs-attr">allow_url_include</span> = <span class="hljs-literal">Off</span>       <span class="hljs-comment">; Prevent including remote files</span>
<span class="hljs-attr">allow_url_fopen</span> = <span class="hljs-literal">Off</span>         <span class="hljs-comment">; Disable remote file wrappers for file operations</span>
</code></pre>
<p class="markdown-p my-4 leading-relaxed">Set <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">open_basedir</code> to confine PHP to the application directory:</p>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-ini markdown-code font-mono text-sm"><span class="hljs-attr">open_basedir</span> = /var/www/example.com/:/tmp/
</code></pre>
<p class="markdown-p my-4 leading-relaxed">After config changes, reload PHP-FPM / webserver:</p>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-bash markdown-code font-mono text-sm"><span class="hljs-built_in">sudo</span> systemctl reload php8.1-fpm
<span class="hljs-built_in">sudo</span> systemctl reload nginx
</code></pre>
<h3 class="markdown-h3 text-xl font-bold mt-6 mb-4">Code-level controls</h3>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Never</strong> include user-supplied URLs or filenames directly. Use explicit allowlists or routing maps:</li>
</ul>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-php markdown-code font-mono text-sm"><span class="hljs-variable">$map</span> = [
  <span class="hljs-string">'home'</span> =&gt; <span class="hljs-string">'pages/home.php'</span>,
  <span class="hljs-string">'about'</span>=&gt; <span class="hljs-string">'pages/about.php'</span>,
];

<span class="hljs-variable">$key</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">'page'</span>] ?? <span class="hljs-string">'home'</span>;
<span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">array_key_exists</span>(<span class="hljs-variable">$key</span>, <span class="hljs-variable">$map</span>)) {
    <span class="hljs-title function_ invoke__">http_response_code</span>(<span class="hljs-number">404</span>); <span class="hljs-keyword">exit</span>;
}
<span class="hljs-keyword">include</span> <span class="hljs-keyword">__DIR__</span> . <span class="hljs-string">'/'</span> . <span class="hljs-variable">$map</span>[<span class="hljs-variable">$key</span>];
</code></pre>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Use realpath validation</strong> before including local files:</li>
</ul>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-php markdown-code font-mono text-sm"><span class="hljs-variable">$base</span> = <span class="hljs-title function_ invoke__">realpath</span>(<span class="hljs-keyword">__DIR__</span> . <span class="hljs-string">'/pages'</span>) . DIRECTORY_SEPARATOR;
<span class="hljs-variable">$path</span> = <span class="hljs-title function_ invoke__">realpath</span>(<span class="hljs-variable">$base</span> . <span class="hljs-variable">$_GET</span>[<span class="hljs-string">'page'</span>]);
<span class="hljs-keyword">if</span> (<span class="hljs-variable">$path</span> === <span class="hljs-literal">false</span> || <span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$path</span>, <span class="hljs-variable">$base</span>) !== <span class="hljs-number">0</span>) {
    <span class="hljs-title function_ invoke__">http_response_code</span>(<span class="hljs-number">403</span>); <span class="hljs-keyword">exit</span>;
}
<span class="hljs-keyword">include</span> <span class="hljs-variable">$path</span>;
</code></pre>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Remove legacy features</strong> that allow remote templates or plugins to pull code from arbitrary sources.</li>
</ul>
<h3 class="markdown-h3 text-xl font-bold mt-6 mb-4">Deployment hardening</h3>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2">Run web processes with <strong class="markdown-strong font-bold">least privilege</strong> (no root).</li>
<li class="markdown-li my-2">Store uploads <strong class="markdown-strong font-bold">outside</strong> webroot and serve via controlled handlers (that never <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">include()</code> uploaded files).</li>
<li class="markdown-li my-2">Enable WAF rules that detect suspicious upstream inclusion attempts as a compensating control.</li>
</ul>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">7 — Detection &amp; logging (for defenders)</h2>
<p class="markdown-p my-4 leading-relaxed">Search logs for RFI-like attempts and suspicious patterns:</p>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Access logs</strong>: look for parameters containing URL patterns or remote hostnames:</li>
</ul>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-bash markdown-code font-mono text-sm">grep -Ei <span class="hljs-string">"(https?://|ftp://|data:|php://)"</span> /var/log/nginx/access.log | <span class="hljs-built_in">tail</span> -n 200
</code></pre>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Error logs</strong>: look for include/require warnings and failure messages:</li>
</ul>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-bash markdown-code font-mono text-sm">grep -i <span class="hljs-string">"failed to open stream"</span> /var/log/php_errors.log
</code></pre>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Alerting</strong>: create SIEM rules for requests with <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">http(s)://</code> inside query parameters or bodies; correlate with spikes in 500 errors.</li>
</ul>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">8 — Responsible reporting checklist</h2>
<p class="markdown-p my-4 leading-relaxed">When you confirm an RFI-like issue in-scope:</p>
<ol class="markdown-ol my-4 ml-6 list-decimal">
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Describe the endpoint &amp; parameter</strong> (exact URL and parameter name).</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Provide non-destructive evidence</strong> (response diffs, headers, stack trace excerpts) — do <strong class="markdown-strong font-bold">not</strong> include exploit payloads.</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Indicate PHP / server fingerprints</strong> gleaned safely (e.g., header, plugin hints).</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">List conditions that increase impact</strong> (e.g., <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">allow_url_include</code> likely on, upload dir writable).</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Suggest fixes</strong> (disable <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">allow_url_include</code>, use allowlists, set <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">open_basedir</code>, restrict privileges).</li>
<li class="markdown-li my-2"><strong class="markdown-strong font-bold">Coordinate disclosure</strong> per vendor policy.</li>
</ol>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">9 — Safe lab for practice</h2>
<p class="markdown-p my-4 leading-relaxed">Practice RFI detection and mitigation in isolated environments only:</p>
<ul class="markdown-ul my-4 ml-6 list-disc">
<li class="markdown-li my-2">Deploy a local vulnerable VM/container or intentionally vulnerable applications (e.g., DVWA on a private Docker network).</li>
<li class="markdown-li my-2">Configure a test PHP environment with <code class="markdown-code font-mono text-sm bg-muted px-1.5 py-0.5 rounded">allow_url_include = On</code> in a lab to understand mechanics — never enable this in production.</li>
</ul>
<p class="markdown-p my-4 leading-relaxed">Example to run a vulnerable app locally (lab):</p>
<pre class="markdown-pre rounded-md bg-muted p-4 overflow-x-auto"><code class="hljs language-bash markdown-code font-mono text-sm"><span class="hljs-comment"># OWASP Juice Shop for general practice</span>
docker run --<span class="hljs-built_in">rm</span> -p 3000:3000 bkimminich/juice-shop
</code></pre>
<p class="markdown-p my-4 leading-relaxed">Build small custom examples in a local VM to safely observe behavior and test mitigations.</p>
<hr class="markdown-hr my-6 h-px border-0 bg-border">
<h2 class="markdown-h2 text-2xl font-bold mt-6 mb-4">10 — Final notes</h2>
<p class="markdown-p my-4 leading-relaxed">RFI is a high-risk issue when present because it can directly lead to arbitrary code execution. Modern defenses (default PHP settings, framework routing, and secure coding practices) make RFI rarer — but legacy code and plugin ecosystems still harbor it. The safest testing posture is: <strong class="markdown-strong font-bold">observe, document, and report</strong> — do not weaponize findings. Help teams remediate by showing exact configuration fixes and safe coding patterns.</p>7:["$","div",null,{"className":"pt-12","children":["$","article",null,{"className":"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8","children":[["$","header",null,{"className":"mb-12 border-b pb-8","children":[["$","div",null,{"className":"mb-10"}],["$","h1",null,{"className":"text-4xl md:text-5xl font-bold text-foreground mb-6","children":"Remote File Inclusion (RFI) — Practical Guide"}],["$","div",null,{"className":"flex items-center gap-6 text-sm text-muted-foreground","children":[["$","div",null,{"className":"flex items-center gap-2","children":["$","span",null,{"children":["By ","Rosemary"]}]}],["$","div",null,{"children":["$","span",null,{"children":"10/25/2025"}]}]]}]]}],["$","div",null,{"className":"prose prose-lg max-w-none","dangerouslySetInnerHTML":{"__html":"$10"}}],["$","div",null,{"className":"mt-12 pt-8 border-t","children":["$","$L5",null,{"href":"/posts","className":"text-primary hover:text-primary/80 transition-colors font-semibold inline-flex items-center gap-2","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":18,"height":18,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-arrow-right rotate-180","children":[["$","path","1ays0h",{"d":"M5 12h14"}],["$","path","xquz4c",{"d":"m12 5 7 7-7 7"}],"$undefined"]}],"Back to Posts"]}]}]]}]}]
a:null
e:[["$","title","0",{"children":"Remote File Inclusion (RFI) — Practical Guide"}],["$","meta","1",{"name":"description","content":"A blog post by Rosemary about cybersecurity"}],["$","link","2",{"rel":"icon","href":"/favicon.ico"}]]
